@font-face {
    font-family: 'Gotham';
    src: url('./static/Fonts/GothamBook.ttf') format('truetype');
    font-weight: 400;
    /* Regular */
    font-style: normal;
}

@font-face {
    font-family: 'Gotham';
    src: url('./static/Fonts/GothamBold.ttf') format('truetype');
    font-weight: 700;
    /* Bold */
    font-style: normal;
}

@font-face {
    font-family: 'Gotham';
    src: url('./static/Fonts/Gotham-Black.otf') format('truetype');
    font-weight: 900;
    /* Black */
    font-size: normal;
}

:root {
    --color-primary: #269fe6;
    --color-primary-hover: #2086c2;
    --color-primary-dark: #13141f;
    --color-primary-dark-hover: #212336;
    --color-primary-light: #d4ecfa;
    --color-primary-light-hover: #bdd8e7;
    --color-white: #fff;
    --color-black: #000;
    --color-dark-text: #444;
    --color-info-light: #cce5ff;
    --color-debug-light: #cce5ff;
    --color-success-light: #d4edda;
    --color-alert-light: #fff3cd;
    --color-warning-light: #fff3cd;
    --color-error-light: #f8d7da;
    --color-info-dark: #4d86c4;
    --color-debug-dark: #4d86c4;
    --color-success-dark: #4a9c5d;
    --color-alert-dark: #927f40;
    --color-warning-dark: #927f40;
    --color-error-dark: #da525d;
    --color-gray-0: #f9f9f9;
    --color-gray-1: #e0e0e0;
    --color-gray-2: #c7c7c7;
    --color-gray-3: #aeaeae;
    --color-gray-4: #959595;
    --color-gray-5: #7d7d7d;
    --color-gray-6: #646464;
    --color-gray-7: #4b4b4b;
    --color-gray-8: #323232;
    --color-gray-9: #191919;


    --font-primary: sans-serif;             /* Fonte principal */
    --font-headings: 'Roboto Slab', serif;  /* Fonte para títulos */
    --spacing-gutter-medium: 3rem;          /* Espaçamento médio */
    --spacing-gutter-large: 4rem;
}

/* Estilo base: remove margens, paddings e define box-sizing */
* {
    padding: 0;
    margin: 0;

}

/* Define o tamanho da fonte base no HTML para facilitar cálculos rem */
html {
    font-size: 62.5%;
}

/* Define o estilo padrão do corpo da página */
body {
    font-size: 1.6rem;
    font-family: var(--color-primary);
    background: white;
}

/*Container Principal do Body*/
.container-main {
}

/* Fundo do cabeçalho principal */
.main-header-container {
    background: red;
    padding: 1rem;
    margin: 0;
}

/* Alinha logo e menu */
.container-center {
    display: flex;
    justify-content: space-between; /* Espaço entre logo e menu */
    align-items: center; /* Alinha verticalmente */
}

.img {
    display: block;
    max-width: 150px; /* Ajuste de largura máximo */
    max-height: 50px; /* Ajuste de altura máximo */
}

.menu {
    display: flex;
    list-style-type: none;
    margin: 0;
    padding: 0;
    gap: 2rem; /* Espaçamento entre itens do menu */
}

.menu-container a {
    color: white;
    text-decoration: none;
    font-size: 16px;
    font-family: 'Gotham', sans-serif;
    font-weight: 700;
    padding: 0.5rem 1rem;   /* Adiciona espaço ao redor do texto, para que o fundo fique maior que a palavra. padding: 0.5rem 1rem significa 0.5rem no topo e na base, e 1rem nas laterais. */       
    border-radius: 50px;    /* Deixa o fundo arredondado */
    transition: 0.3s;       /* Animação suave */
}

.menu-container a:hover {
    color: red;
    background: white;
}

.mobile-menu-icon {
    display: none;
}

.mobile-menu {
    display: none;
}

/*Main principal do body*/
.main-content-container {
    margin: 0;                  /* Remove qualquer margem ao redor do contêiner, ou seja, deixa o contêiner sem margem externa. */
    display: flex;              /* Define o contêiner como um flex container, permitindo usar as propriedades do flexbox. */
    justify-content: center;    /* Alinha os itens filhos (conteúdo) horizontalmente no centro do contêiner. */
    align-items: center;        /* Alinha os itens filhos verticalmente no centro do contêiner. */
    padding: 60px 20px;         /* Aplica preenchimento (padding) de 30px na parte superior, 20px na parte direita e esquerda, e 20px na parte inferior. */
               /*garante que o container ocupe pelo menos 100% da altura da tela, o que significa que o <footer> será empurrado para o fundo quando o conteúdo da <main> for pequeno, mas não será sobreposto*/
}

.main-content {
    max-width: 1600px;
    width: 100%;
    display: flex;
    flex-direction: row;        /* Organiza os elementos em linha (horizontalmente) */ 
    align-items: flex-start;    /* Alinha os elementos ao topo */
    justify-content: center;    /*Adiciona espaçamento entre texto e imagem */
    
}

.main-content-text {
    max-width: 64rem;       /* Define uma largura máxima para o elemento. Isso limita o tamanho do conteúdo mesmo em telas maiores. */
    margin-left: 0 ;    /* Centraliza o elemento horizontalmente, já que `auto` nas margens funciona em conjunto com largura fixa ou máxima. */
}


.main-content-text .title-h2 {
    font-family: 'Gotham', sans-serif;      /* Define a fonte primária como 'Gotham'. Caso não esteja disponível, usa 'sans-serif' como reserva. */
    color: #001369;                       /* Define a cor do texto em um tom de azul escuro. */
    font-weight: 700;                       /* Define o peso da fonte como negrito (700 é equivalente a "bold"). */
    font-size: 6rem;                        /* Define o tamanho da fonte em 6 rem (relativo ao tamanho da raiz). */
}

.main-content-text .title-h1 {
    font-family: 'Gotham', sans-serif;       /* Aplica a mesma configuração de fonte usada no título anterior. */
    color: red;                           /* Define a cor do texto como vermelho. */
    font-size: 11rem;                       /* Define o tamanho da fonte como 11 rem, o que a torna bem maior que `title-h2`. */
    font-weight: 900;                       /* Usa um peso de fonte ainda maior, tornando o texto extra negrito. */
    padding: 0.5px;                         /* Adiciona um espaçamento interno mínimo ao redor do texto (0.5px é muito pequeno). */
}

.plac-description p {
    padding: 1rem 0 4rem 0;
    /* Adiciona espaçamento interno:
                                  - Superior: 1 rem
                                  - Direito: 0
                                  - Inferior: 4 rem
                                  - Esquerdo: 0 */
}

.plac-description .sac {
    color: white;           /* Define a cor do texto como branco. */
    background: red;        /* Define o fundo do botão como vermelho. */
    padding: 1rem 2rem;       /* Adiciona espaçamento interno: - Superior e Inferior: 1 rem - Direito e Esquerdo: 2 rem */
    border-radius: 50px;      /* Arredonda os cantos do botão, deixando-o com bordas circulares. */
    font-size: 2rem;          /* Define o tamanho da fonte como 2 rem. */
    text-decoration: none;    /* Remove o sublinhado padrão de links. */  
    display: inline-block;    /* Permite o uso de margens e paddings enquanto mantém o botão em linha com outros elementos. */
    margin-right: 1rem;       /* Adiciona espaçamento à direita do botão. */
}

.sac {
    font-family: 'Gotham', sans-serif;  /* Usa a fonte 'Gotham' como primária. */
    font-weight: 700;                   /* Define o peso da fonte como negrito. */
    font-size: 4rem;                    /* Define um tamanho grande para o texto. */
    text-decoration: none;              /* Remove o sublinhado padrão. */
    flex-flow: column nowrap;          /* Define o fluxo de layout flexível: - `column`: organiza itens verticalmente. - `nowrap`: impede que os itens quebrem para novas linhas. */                        
}

.picture {
    text-align: right;      /* Alinha o conteúdo interno (como imagens) à direita. */
}

.picture img {
    max-width: 100%;        /* Garante que a largura da imagem nunca ultrapasse 100% de seu contêiner. */
    max-width: 100%; 
    max-height: 55rem;      /* Define um limite máximo para a largura */
    width: 100%;            /*Mantém a largura proporcional ao tamanho do contêiner. */
    height: 100%;           /*Ajusta automaticamente a altura proporcional à largura, mantendo a proporção da imagem. */
}

.main-footer {
    margin: 0;
    height:min-content;
    background: var(--color-gray-1);
    display: flex;              /*Container flexível: Isso ativa o Flexbox, que é um sistema de layout para organizar os elementos filhos do container.*/
    padding: 2rem 1rem 2rem;              /*Adiciona um espaçamento interno (padding) de 1rem em todos os lados do elemento.*/
    justify-content: center;    /*Alinha os elementos filhos horizontalmente no centro do container.*/
    flex-flow: column nowrap;   /*flex-direction: column; significa que os itens filhos serão dispostos em uma coluna vertical.
                                flex-wrap: nowrap; impede que os itens "quebrem" para uma nova linha, forçando-os a permanecer na mesma coluna.*/
}

.footer-address {
    font-size: 14px;
    font-family: 'Gotham', sans-serif;
    font-weight: 400;
    color: var(--color-gray-6);
    font-style: normal;
}

.footer-section {
    display: flex;
    align-items: center;                /* Alinha verticalmente os itens no centro */
    justify-content: space-evenly;      /* Distribui os itens com espaçamento uniforme */
    width: 100%;                        /* Garante que a largura ocupe 100% do contêiner pai */
    max-width: 1170px;                  /* Define um limite máximo de largura para o footer */
    margin: 0 auto;                     /* Centraliza o footer horizontalmente */
    text-align: center;                 /* Centraliza o texto dentro do contêiner */
    overflow: hidden;                   /* Esconde qualquer transbordamento */
}

.footer-section .location {
    font-size: 2rem;
    font-family: 'Gotham', sans-serif;
    font-weight: 700;
    text-decoration: none;
    color: var(--color-gray-8);
}

.footer-section i {
    font-size: 15px;
    color: var(--color-gray-8);
}

.footer-information {
    display: grid;
}

.footer-information h2 {
    font-size: 15px;
    font-family: 'Gotham', sans-serif;
    font-weight: 700;
    color: var(--color-gray-7);
}

.footer-information a{
    padding: 3px;
    color: var(--color-gray-7);
    font-size: 12px;
    font-family: 'Gotham', sans-serif;
    font-weight: 400;
    text-decoration: none;
}

.footer-information h2:nth-of-type(2) {
    margin-top: 15px;
}

.body-main-form {
    background: white;                /* Define o fundo do contêiner como branco. */
                      /* Define uma margem de 3px em todos os lados do contêiner. */
    border: solid var(--color-gray-1);  /* Define a borda como sólida com a cor de 'var(--color-gray-1)' (uma variável CSS que provavelmente está definida em outro lugar do seu código). */
    border-radius: 5px;                 /* Define um arredondamento de 5px nas bordas do contêiner. Isso faz com que as bordas sejam suavemente arredondadas. */
    width: 100%;                        /* A largura do contêiner será 100% do elemento pai, ou seja, ocupará toda a largura disponível. */
    max-width: 800px;                  /* A largura máxima do contêiner será 800px. Mesmo que o elemento pai seja maior, o contêiner não ultrapassará 800px de largura.*/
    margin: 7% auto;                   /* Define uma margem de 7% em todos os lados do contêiner e ajuda na responsividade. Assim a tela fixa cheia e não sobra espaço em branco.*/
    box-shadow: -3.5px 5px 9px -4px var(--color-gray-1);
}

.body-main-form form {
    border-radius: 5px;
    background: #001369;
}

.main-Login {  
    background: var(--color-gray-0);    /* Define a cor de fundo usando uma variável CSS. A cor é armazenada em 'var(--color-gray-0)'. */
    width: 100%;                        /* Faz com que o contêiner ocupe toda a largura disponível da tela ou do elemento pai. */
    max-width: 800px;                  /* Define a largura máxima do contêiner como 1500px. Não importa o tamanho da tela, o contêiner não será maior que isso. */
                        /* Aplica uma margem automática à esquerda e à direita, centralizando o contêiner na tela ou em seu elemento pai. */
    /*border: var(--color-gray-5);        /* Define a cor da borda utilizando uma variável CSS 'var(--color-gray-5)'. */
    display: grid;                      /* Define que o contêiner usará o modelo de layout **Grid** para os itens internos, o que permite uma disposição mais complexa e controlada dos filhos. */
    border-radius: 5px;                 /* Aplica um arredondamento nas bordas do contêiner, com um raio de 5px. Isso cria bordas suavemente arredondadas. */
    /*box-shadow: -3.5px 5px 9px -4px var(--color-gray-1); /* Aplica uma sombra ao redor do contêiner. O primeiro valor (-3.5px) é o deslocamento horizontal da sombra, o segundo (5px) é o deslocamento vertical, o terceiro (9px) é o desfoque da sombra, e o último valor (-4px) é o espalhamento da sombra. A cor da sombra é definida pela variável CSS 'var(--color-gray-2)'. */
    overflow: hidden;
}

.groundLogin {
    border-radius: 5px 5px 0 0;
    background: var(--color-gray-1);
    font-size: 3rem;
    font-family: 'Gotham', sacns-serif;
    font-weight: 900;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
}

.form-login {
    background: white;
    width: 100%;
    
}

.form-login p {
    color: red;
    font-size: 15px;
    font-family: 'Gotham', sans-serif ;
    font-weight: 700;
}

.password {
    padding-top: 7%;
}

.input-box input {
    border-radius: 30px;
    border: 1.5px solid var(--color-gray-1);
    height: 2rem;
    background-color: white;
    width: 30rem;
    margin-top: 3px;
    padding: 5px;
}

.form-login div {
    align-items: center;
    justify-content: center;
    padding: 15px;
    display: grid;
}

.remember-forgot .center-form {
    color: var(--color-gray-5);
    font-family: 'Gotham', sans-serif;
    font-size: 1rem;
    font-weight: 700;
    text-align: center;
}

.main-bottum-login button {
    background-color: red;
    border-radius: 15px;
    font-size: 15px;
    border: none;               /*remover a borda preta de um botão no CSS*/
    padding: 5px 12px 5px 12px;
    color: white;
    font-family: 'Gotham', sans-serif;
    font-weight: 700;
}

.form-container {
    margin: 0 auto; /*Centraliza o formulário horizontalmente*/
    justify-self: center;
}

.main-form-register {
    display: flex;
}

.main-form-register .form-register {
    padding: 0 4rem 0 0;
}

.form-register2  {
    display: grid;
}

.register-shipping-details {
    display: grid;
    grid-template-columns: repeat(2, 1.5fr);      /*grid-template-columns: Especifica o número e o tamanho das colunas no layout da grid.
                                                repeat(2, 1fr): 2: Número de colunas. 1fr: Tamanho de cada coluna, ocupando partes iguais do espaço disponível no contêiner.*/
}

.maintitle-form h1{
    font-size: 4rem;
    color:#001369; /*AZUL PLAC*/
    font-family: 'Gotham', sans-serif;
    font-weight: 900;
    padding: 0 0 1rem;
}

.register {
    display: grid;
    padding: 1rem;
}

.register input{
    border-radius: 10px;
    border: 1.5px solid var(--color-gray-4);
    padding: 6px 10px;
    width: 30rem;
}

#email {
    border-radius: 10px;
    border: 1.5px solid var(--color-gray-4);
    padding: 6px 10px;
    width: 34rem;
}

.register label{
    font-weight: 400;
    font-size: 1rem;
    font-family: 'Gotham', sans-serif;
    color: var(--color-gray-6);
}

.register label {
    margin-left: 10px;           /*Esta propriedade está deslocando as labels para a direita sem centraliza-las*/
}

.title-form {
    color: red;
    font-size: 2.5rem;
    font-family: 'Gotham', sans-serif;
    font-weight: 700;
}

.form-register2 .title-form{
    grid-column-start: 1;
    grid-column-end: 4;
    grid-row-start: 1;
    grid-row-end: 1;
}

.data {
    padding: 0 0 1rem 0;
    display:grid;
    justify-content: left;
}

.register-access-data {
    display: flex;
    justify-content: center;
    align-items: center;
}

.form-button {
    display: flex;
    justify-content: right;
    overflow: hidden;
}
.button-register {
    background: red;
    color: white;
    border-radius: 2rem;
    padding: 5px 25px 5px;
    border: none;

    font-family: 'Gotham', sans-serif;
    font-size: 1.5rem;
    font-weight: 900;
}

/*SAC.HTML*/

.divs-complaint {
    display: flex;
    flex-wrap: wrap;
    width: 100%;
}

.complaint {
    display: flex;
    align-items: baseline;
    flex-wrap: wrap;
}

.form-complaint {
    display: grid;
    padding: 0 2rem;
}

.inputs-complaint {
    display: grid;
    padding: 1rem;
}

.button-complaint {
    align-self: self-end;
}

.title-complaint {
    padding: 1rem;
}

#input-complaint-text{
    width: 43rem;
    height: 12rem;
}

/* Responsividade */

/* Estilos para telas pequenas (celulares) */
@media screen and (max-width: 800px) {
    .main-content-container {
        padding: 40px 20px;
    }
    .main-header-container {
        display: flex;                  /* Transforma o contêiner em flexbox para alinhar os elementos filhos de forma flexível. */
        padding: 1rem;                  /* Adiciona espaçamento interno ao redor do contêiner. */
        justify-content: space-between; /* Distribui os elementos horizontalmente com o maior espaço possível entre eles. */
        align-items: center;            /* Centraliza os elementos verticalmente no contêiner. */
    }

    .container-center {
        flex-grow: 1;                   /* Faz com que o contêiner cresça e ocupe o espaço restante disponível horizontalmente. */
        display: flex;                  /* Define o layout flexível para os elementos dentro do contêiner. */
        justify-content: space-between; /* Distribui os elementos filhos horizontalmente com espaço entre eles. */
        align-items: center;            /* Alinha verticalmente os itens no centro. */
    }

    .main-logo {
        display: flex;              /* Torna o contêiner flexível. */
        justify-content: center;    /* Centraliza os itens horizontalmente dentro do contêiner. */
        align-items: center;        /* Centraliza os itens verticalmente dentro do contêiner. */
        margin: 1REM;
    }

    .main-logo .img {
        max-width: 10rem;       /* Limita a largura máxima da imagem para 10 rem. */
        max-height: 10rem;      /* Limita a altura máxima da imagem para 10 rem. */
    }

    .menu-container {
        display: none;              /* Oculta o menu principal em dispositivos menores para evitar sobrecarga visual. */
    }

    .mobile-menu-icon {
        display: flex;                  /* Torna o ícone visível em dispositivos menores. */
        justify-content: flex-start;    /* Alinha o ícone à esquerda dentro do contêiner. */
        align-items: center;            /* Centraliza verticalmente o ícone dentro do contêiner. */
    }

    .mobile-menu-icon button {
        background-color: transparent;  /* Remove o fundo padrão do botão. */
        border: none;                   /* Remove a borda do botão. */
        cursor: pointer;                /* Mostra o cursor "mãozinha" para indicar que o botão é clicável. */
        margin-left: auto;              /* Empurra o botão para o lado direito. */
    }

    .plac-description .sac {
        padding: 0.5rem 1rem;
        justify-content: center;
        text-align: center;
    }

    .picture {
        padding: 2rem 0 0 0;
    }

    .footer-information {
        display: none;          /* Oculta as informações do rodapé em dispositivos menores. */
    }

    .footer-section {
        justify-content: center; /* Centraliza os itens horizontalmente dentro desta seção. */
    }

    .footer-section-location {
        align-items: center;    /* Centraliza os itens verticalmente dentro desta seção. */
    }

    .footer-address {
        text-align: center;     /* Centraliza o texto do endereço horizontalmente. */
    }

    .main-content {
        flex-direction: column;
    }

    .plac-description p{
        text-align:justify;
    }

    .main-content-text .title-h1 {
        font-size: 5rem;
        padding: 0%;
    }

    .main-content-text .title-h2 {
        font-size: 3.5rem;
    }

    .form-container {
        overflow: hidden;
        width: 100%;
        justify-content: center;
        align-items: center;
    }

    .register-access-data {
        display: grid;
    }

    .main-form-register{
        display: grid;
        justify-content: left;
    }

    .register-shipping-details {
        display: grid;
        grid-template-columns: none;
    }

    .form-button {
        margin: 0 auto;
        display: grid;
        width: 100%;

    }

    #email{
        width: 30rem;
    }

    .open {
        display: block;
    }
    
}